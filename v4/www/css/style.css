.my-container{
    margin: 0.9rem;
}

* {
    box-sizing: border-box;
}

head {
    background-color: #333A56;
}

/*This just stops me getting horizontal scrolling if anything overflows the width*/
body {
    overflow-x: hidden;
}

/*Just removing default browser padding/margin*/
html,
body {
    padding: 0;
    margin: 0;
    color: #000000;
}

img {
    max-width: 100%;
    max-height: 100%;
}

/*Flexbox gives us the flexiness we need. The top just stays put as there is no scrolling on the body due to the page never exceeding viewport height*/
.Top {
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgb(216, 224, 216);
    font-size: 3rem;
    position: relative;
    z-index: 10;
    height: 50px;
}

/*This is our main wrapping element, it's made 100vh high to ensure it is always the correct size and then moved into place and padded with negative margin and padding*/
.flex-Container {
    display: flex;
    overflow: hidden;
    height: calc(100vh - 50px);
    position: relative;
    width: 100%;
    backface-visibility: hidden;
    will-change: overflow;
}
/*All the scrollable sections should overflow and be whatever height they need to be. As they are flex-items (due to being inside a flex container) they could be made to stretch full height at all times if needed.
WebKit inertia scrolling is being added here for any present/future devices that are able to make use of it.
*/
.Left,
.Right {
    overflow: auto;
    height: auto;
    padding: .5rem;
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: none;
}

/*Entirely optional â€“ just wanted to remove the scrollbar on WebKit browsers as I find them ugly*/
.Left::-webkit-scrollbar,
.Right::-webkit-scrollbar {
    display: none;
}

/*  Left and Right are set sizes while the Middle is set to flex one so it occupies all remaining space. This could be set as a width too if prefereable, perhaps using calc.*/
.Left {
    width: 65%;
    background-color: rgb(255, 255, 255);
}

.Right {
    flex: 1;
}

table {
    font-family: arial, sans-serif;
    font-size: 1.5em;
    border-collapse: collapse;
    width: 100%;    
}

td, th {
    border: 1px solid #7e7e7e;
    text-align: left;
    padding: 0.3rem;
}

th.steps {
    text-align: center;
}

td.sno {
    padding: 0.2rem 0.1rem;
    margin: 0.2rem;
    text-align: left;    
}

td.sno_index {
    padding: 0.2rem 0.1rem;
    margin: 0.2rem;
    text-align: center;    
}

td.cnt {
    padding-left: 0.2rem ;
    margin-left: 0.2rem;    
}

td.indented_in {
    border: 0.5px dotted #0f0f0f;
    padding: 0.5rem;
    margin-left: 1.5rem;
    text-indent: 1.5rem;
    text-align: right;
    background-color: rgb(236, 236, 236);
}

td.indented_tx {
    border: 0.5px dotted #0f0f0f;
    padding: 0.5rem;
    margin-left: 1.5rem;
    text-indent: 1.5rem;
    text-align: left;
    background-color: rgb(236, 236, 236);
}

td.warn {
    border: 0.5px dotted #0f0f0f;
    padding: 0.5rem;
    margin-left: 1.5rem;
    text-indent: 1.5rem;
    text-align: left;
    background-color: #990000;
    color: #ffffff;
}

td.completed {
    border: 0.5px dotted #0f0f0f;
    padding: 0.5rem;
    margin-left: 1.5rem;
    text-indent: 1.5rem;
    text-align: left;
    background-color: #979797 !important;
    color: #ffffff;
}

td.selected {
    background-color: #52658F;
    color: #F7F5E6;
}

.back-button {
    float: left !important;
    left: 8 !important;
    position: absolute !important;
}

#round {
    border-radius: 50%;
}

div.white-space-pre-line {
    white-space: pre-line;
}